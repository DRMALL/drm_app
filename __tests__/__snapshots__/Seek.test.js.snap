// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Seek test 1`] = `
<View
  style={
    Object {
      "paddingBottom": 80,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "borderColor": "rgba(0,0,0,.06)",
        "borderWidth": 0.5,
        "flexDirection": "row",
        "height": 40,
        "justifyContent": "space-between",
        "width": "100%",
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "borderColor": "rgba(0,0,0,.3)",
          "borderRightWidth": 0.5,
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
          "width": "50%",
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(0,0,0,.6)",
              "fontSize": 14,
              "marginRight": 10,
            },
            Object {},
          ]
        }
      >
        所有配件
      </Text>
      <Image
        source={1}
      />
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
          "width": "50%",
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(0,0,0,.6)",
              "fontSize": 14,
              "marginRight": 10,
            },
            Object {},
            undefined,
            Object {
              "opacity": 0.5,
            },
          ]
        }
      >
        所有类型
      </Text>
      <Image
        source={1}
        style={
          Object {
            "opacity": 0.5,
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "height": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "position": "relative",
            "zIndex": 3,
          },
          Object {
            "height": "100%",
            "paddingBottom": 50,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#F7F7F7",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "rgba(0,0,0,.06)",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 18,
              }
            }
          >
            <View
              style={
                Object {
                  "borderColor": "rgba(0,0,0,.3)",
                  "borderRightWidth": 0.5,
                  "width": "28%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "rgba(0,0,0,.3)",
                    "fontSize": 14,
                  }
                }
              >
                物料长代码
              </Text>
            </View>
            <View
              style={
                Object {
                  "borderColor": "rgba(0,0,0,.3)",
                  "borderRightWidth": 0.5,
                  "width": "26%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "rgba(0,0,0,.3)",
                    "fontSize": 14,
                  }
                }
              >
                物料名称
              </Text>
            </View>
            <View
              style={
                Object {
                  "borderColor": "rgba(0,0,0,.3)",
                  "borderRightWidth": 0.5,
                  "width": "28%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "rgba(0,0,0,.3)",
                    "fontSize": 14,
                  }
                }
              >
                规格型号
              </Text>
            </View>
            <View
              style={
                Object {
                  "width": "18%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "rgba(0,0,0,.3)",
                    "fontSize": 14,
                  }
                }
              >
                单位
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#F7F7F7",
              "height": 500,
              "justifyContent": "center",
              "width": "100%",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "rgba(0,0,0,.3)",
                "fontSize": 18,
              }
            }
          >
            暂无内容
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "position": "relative",
            "zIndex": 3,
          },
          Object {
            "height": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "height": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
              "opacity": 1,
            }
          }
        >
          <RCTScrollView>
            <View />
          </RCTScrollView>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "backgroundColor": "black",
                "height": "100%",
                "opacity": 0.5,
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "position": "relative",
            "zIndex": 3,
          },
          Object {
            "height": 0,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "height": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#fff",
              "opacity": 1,
            }
          }
        >
          <RCTScrollView>
            <View />
          </RCTScrollView>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          isTVSelectable={true}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "backgroundColor": "black",
                "height": "100%",
                "opacity": 0.5,
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;
