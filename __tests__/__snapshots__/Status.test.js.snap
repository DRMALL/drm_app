// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Status test 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F7F7F7",
      "height": "100%",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "borderBottomWidth": 0.5,
        "borderColor": "rgba(0,0,0,.06)",
        "borderLeftWidth": 0.5,
        "borderRightWidth": 0.5,
        "flexDirection": "row",
        "height": 50,
        "justifyContent": "space-around",
        "paddingTop": 5,
        "width": "100%",
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "opacity": 1,
          "width": "33.3333%",
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(0,0,0,.6)",
              "fontSize": 16,
              "height": "90%",
              "paddingVertical": 10,
            },
            Object {
              "color": "#579df2",
            },
          ]
        }
      >
        全部
      </Text>
      <View
        style={
          Object {
            "backgroundColor": "#579df2",
            "borderRadius": 2,
            "height": "10%",
            "width": "100%",
          }
        }
      />
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "opacity": 1,
          "width": "33.3333%",
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(0,0,0,.6)",
              "fontSize": 16,
              "height": "90%",
              "paddingVertical": 10,
            },
            Object {},
          ]
        }
      >
        在线
      </Text>
      <View
        style={
          Object {
            "borderRadius": 2,
            "height": "10%",
            "width": "100%",
          }
        }
      />
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "opacity": 1,
          "width": "33.3333%",
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "rgba(0,0,0,.6)",
              "fontSize": 16,
              "height": "90%",
              "paddingVertical": 10,
            },
            Object {},
          ]
        }
      >
        离线
      </Text>
      <View
        style={
          Object {
            "borderRadius": 2,
            "height": "10%",
            "width": "100%",
          }
        }
      />
    </View>
  </View>
  <RCTScrollView
    refreshControl={
      <RefreshControlMock
        colors={
          Array [
            "#ff0000",
            "#00ff00",
            "#0000ff",
          ]
        }
        onRefresh={[Function]}
        progressBackgroundColor="#fff"
        refreshing={false}
        title="下拉刷新"
        titleColor="rgba(0,0,0,.6)"
      />
    }
  >
    <RCTRefreshControl />
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#F7F7F7",
            "height": 500,
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "rgba(0,0,0,.3)",
              "fontSize": 18,
            }
          }
        >
          暂无内容
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
